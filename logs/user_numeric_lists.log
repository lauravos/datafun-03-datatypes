2023-09-07 19:38:53,773 =============================================================
2023-09-07 19:38:53,773 =============================================================
2023-09-07 19:38:53,773 Today is 2023-09-07 at 07:38 PM
2023-09-07 19:38:53,805 This file is running on: nt Windows 10
2023-09-07 19:38:53,805 The Python version is: 3.11.4
2023-09-07 19:38:53,805 The active conda environment is:  None
2023-09-07 19:38:53,805 The active pip environment is:    None
2023-09-07 19:38:53,805 The active environment path is:   C:\Users\laura\AppData\Local\Programs\Python\Python311
2023-09-07 19:38:53,805 The current working directory is: C:\Users\laura\OneDrive\Documents\datafun-03-datatypes-main\datafun-03-datatypes
2023-09-07 19:38:53,805 This source file is in:           c:\Users\laura\OneDrive\Documents\datafun-03-datatypes-main\datafun-03-datatypes
2023-09-07 19:38:53,805 =============================================================
2023-09-07 19:38:53,805 =============================================================
2023-09-07 19:38:53,805 list1 is : [7.2, 11, 9.4, 8.1, 15.8, 17, 11.6, 6.8, 9.5, 13.8, 21, 14.3, 12.5, 10.1, 19.6, 11.6, 10.1, 17.5, 13.4, 7.6, 6.7, 12.9, 10.4, 22.3, 15]
2023-09-07 19:38:53,805 listx is : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
2023-09-07 19:38:53,805 listy is : [22, 23, 28, 29, 31, 33, 34, 37, 40, 41]
2023-09-07 19:38:53,813 LIST STATISTICS.......................................................................................................
2023-09-07 19:38:53,813 list1 mean: 12.608
2023-09-07 19:38:53,813 list1median: 11.6
2023-09-07 19:38:53,813 list1 mode: 11.6
2023-09-07 19:38:53,813 list1 variance: 19.279100000000003
2023-09-07 19:38:53,813 list1 standard deviation: 4.390797194132292
2023-09-07 19:38:53,813 listy mean: 31.8
2023-09-07 19:38:53,813 listy median: 32.0
2023-09-07 19:38:53,813 listy mode: 22
2023-09-07 19:38:53,813 listy variance: 42.4
2023-09-07 19:38:53,813 listy standard deviation: 6.511528238439882
2023-09-07 19:38:53,813 LISTS - CORRELATION AND PREDICTION.....................................................................................
2023-09-07 19:38:53,813 listx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
2023-09-07 19:38:53,813 listy: [22, 23, 28, 29, 31, 33, 34, 37, 40, 41]
2023-09-07 19:38:53,813 correlation between x and y: 0.9919311082680919
2023-09-07 19:38:53,813 The equation of the best fit line is: y = 2.1333333333333333x + 22.200000000000003
2023-09-07 19:38:53,813 We predict that when x = 15, y will be about 54.2
2023-09-07 19:38:53,813 LISTS - USING PYTHON BUILT-IN FUNCTIONS..........................................................................
2023-09-07 19:38:53,813 Given score list: [7.2, 11, 9.4, 8.1, 15.8, 17, 11.6, 6.8, 9.5, 13.8, 21, 14.3, 12.5, 10.1, 19.6, 11.6, 10.1, 17.5, 13.4, 7.6, 6.7, 12.9, 10.4, 22.3, 15]
2023-09-07 19:38:53,813 The max() is 22.3
2023-09-07 19:38:53,813 The min() is 6.7
2023-09-07 19:38:53,813 The len() is 25
2023-09-07 19:38:53,813 The sum() is 315.19999999999993
2023-09-07 19:38:53,813 The average is 12.607999999999997
2023-09-07 19:38:53,813 Given score list: [7.2, 11, 9.4, 8.1, 15.8, 17, 11.6, 6.8, 9.5, 13.8, 21, 14.3, 12.5, 10.1, 19.6, 11.6, 10.1, 17.5, 13.4, 7.6, 6.7, 12.9, 10.4, 22.3, 15]
2023-09-07 19:38:53,813 Using the built-it function sorted(lst) gives: [6.7, 6.8, 7.2, 7.6, 8.1, 9.4, 9.5, 10.1, 10.1, 10.4, 11, 11.6, 11.6, 12.5, 12.9, 13.4, 13.8, 14.3, 15, 15.8, 17, 17.5, 19.6, 21, 22.3]
2023-09-07 19:38:53,813 Using the built-in function sorted(lst,reverse=True) gives: [22.3, 21, 19.6, 17.5, 17, 15.8, 15, 14.3, 13.8, 13.4, 12.9, 12.5, 11.6, 11.6, 11, 10.4, 10.1, 10.1, 9.5, 9.4, 8.1, 7.6, 7.2, 6.8, 6.7]
2023-09-07 19:38:53,813 LIST METHODS.....................................................................................................
2023-09-07 19:38:53,817 lst is: [4, 6, 2, 3, 10, 7]
2023-09-07 19:38:53,817 append 5 to lst: [4, 6, 2, 3, 10, 7, 5]
2023-09-07 19:38:53,817 lst extended to inclued a new list: [4, 6, 2, 3, 10, 7, 5, 11, 13]
2023-09-07 19:38:53,817 lst with value inserted (new value = 15): [15, 4, 6, 2, 3, 10, 7, 5, 11, 13]
2023-09-07 19:38:53,817 lst wtih the number 5 removed: [15, 4, 6, 2, 3, 10, 7, 11, 13]
2023-09-07 19:38:53,817 Number of times 2 appears in lst: 1
2023-09-07 19:38:53,817 lst sorted into ascending order: [2, 3, 4, 6, 7, 10, 11, 13, 15]
2023-09-07 19:38:53,817 lst sorted into descending order: [15, 13, 11, 10, 7, 6, 4, 3, 2]
2023-09-07 19:38:53,817 new_lst is (copy of lst): [15, 13, 11, 10, 7, 6, 4, 3, 2]
2023-09-07 19:38:53,817 Popped the first (index=0): 15 and now, new_lst is: [13, 11, 10, 7, 6, 4, 3, 2]
2023-09-07 19:38:53,817 Popped the last (index=-1): 2 and now, new_lst is: [13, 11, 10, 7, 6, 4, 3]
2023-09-07 19:38:53,817 LIST TRANSFORMATIONS - Using filter() and map()...........................................................................
2023-09-07 19:38:53,817 Scores less than 4: [3]
2023-09-07 19:38:53,817 cubed root of scores: [2.3513346877207573, 2.2239800905693157, 2.154434690031884, 1.9129311827723892, 1.8171205928321394, 1.5874010519681994, 1.4422495703074083]
2023-09-07 19:38:53,817 the volume of a cube for each value is: [2197, 1331, 1000, 343, 216, 64, 27]
2023-09-07 19:38:53,817 LIST TRANSFORMATIONS - Using List Comprehension.......................................................................
2023-09-07 19:38:53,817 Numbers under 10 (using list comprehensions!): [7.2, 9.4, 8.1, 6.8, 9.5, 7.6, 6.7]
2023-09-07 19:38:53,817 Tripled numbers (using list comprehensions!): [21.6, 33, 28.200000000000003, 24.299999999999997, 47.400000000000006, 51, 34.8, 20.4, 28.5, 41.400000000000006, 63, 42.900000000000006, 37.5, 30.299999999999997, 58.800000000000004, 34.8, 30.299999999999997, 52.5, 40.2, 22.799999999999997, 20.1, 38.7, 31.200000000000003, 66.9, 45]
2023-09-07 19:38:53,817 Numbers divided in half (using list comprehensions): [3.6, 5.5, 4.7, 4.05, 7.9, 8.5, 5.8, 3.4, 4.75, 6.9, 10.5, 7.15, 6.25, 5.05, 9.8, 5.8, 5.05, 8.75, 6.7, 3.8, 3.35, 6.45, 5.2, 11.15, 7.5]
